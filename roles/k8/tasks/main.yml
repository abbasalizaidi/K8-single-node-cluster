- name: "Installing vim"
  apt: pkg=vim state=installed

- name: "Getting docker package key"
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

- name: "Getting kubernetes package key"
  shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

#- name: "Adding docker package repository"
#  shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

- name: "Adding docker repo"
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present

- name: "Adding kubernetes repo"
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present

- name: "Update package list"
  apt:
    update_cache: yes

- name: "Installing docker"
  package: name=docker-ce state=present

- name: "Enable docker service"
  shell: systemctl enable docker

- name: "Installing transport-https"
  apt: pkg=apt-transport-https state=installed

- name: "Installing kubernetes"
  apt: name={{item}} state=installed
  with_items:
    - python-pip
    - kubelet
    - kubeadm
    - kubectl
    - selinux-utils

- name: "Install pexpect pyton library"
  pip: name=pexpect

- name: "Reset kubernetes"
  expect:
    command: kubeadm reset
    responses:
      (?i)proceed?: "y"

- name: "Initializing kubernetes"
  shell: kubeadm init --pod-network-cidr=192.168.0.0/16
  tags:
    - reset

- name: "Configuring kubectl"
  shell: mkdir -p $HOME/.kube;cp /etc/kubernetes/admin.conf $HOME/.kube/config;chown $(id -u):$(id -g) $HOME/.kube/config
  tags:
    - reset

- name: "Configuring kubectl for ubuntu user"
  shell: mkdir -p /home/ubuntu/.kube;cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config;chown $(id -u):$(id -g) /home/ubuntu/.kube/config
  tags:
    - reset

- name: "Changing mode of .kube directory"
  shell: chmod -R 755 /home/ubuntu/.kube

- name: "Configuring kubernetes network"
  shell: kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml && kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  tags:
    - network

- name: "Configuring single node cluster"
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  tags:
    - configure
